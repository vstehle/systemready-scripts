---
$id: "https://gitlab.arm.com/systemready/systemready-scripts/-/raw/master/\
    schemas/check-sr-results-schema.yaml"
$schema: https://json-schema.org/draft/2020-12/schema
title: SystemReady IR results check rules schema
description: |
    SystemReady IR results are expected to conform to a certain format,
    described in https://gitlab.arm.com/systemready/systemready-ir-template.

    The check-sr-results.py scripts verifies requirements on those results,
    using the check-sr-results.yaml configuration file.

    This schema describes requirements on the configuration file. It can be used
    by the valid.py script.

    See the README for details.
$defs:
    array-of-strings:
        type: array
        minItems: 1
        items:
            type: string
    tree:
        type: array
        minItems: 1
        uniqueItems: true
        items:
            type: object
            oneOf:
                - '$ref': '#/$defs/file'
                - '$ref': '#/$defs/dir'
    file:
        type: object
        properties:
            file:
                type: string
            must-contain:
                oneOf:
                    - '$ref': '#/$defs/array-of-strings'
                    - const: 'DELETE'  # For overlays.
            warn-if-contains:
                '$ref': '#/$defs/array-of-strings'
            warn-once-if-contains:
                '$ref': '#/$defs/array-of-strings'
            error-if-contains:
                '$ref': '#/$defs/array-of-strings'
            can-be-empty:
                const: null
            optional:
                const: null
            capsuleapp-esrt:
                const: null
            uefi-capsule:
                const: null
            devicetree:
                const: null
            sct-parser-result-md:
                type: object
                properties:
                    seq-file:
                        enum:
                            - sct_results/Sequence/EBBR.seq
                            - sct_results/Sequence/BBSR.seq
                required:
                    - seq-file
                additionalProperties: false
            warn-if-not-named:
                type: string
            uefi-sniff:
                const: null
            must-have-esp:
                const: null
            min-occurrences:
                type: integer
        required:
            - file
            # must-contain is optional
            # warn-if-contains is optional
            # warn-once-if-contains is optional
            # error-if-contains is optional
            # can-be-empty is optional
            # optional is optional
            # capsuleapp-esrt is optional
            # uefi-capsule is optional
            # devicetree is optional
            # sct-parser-result-md is optional
            # warn-if-not-named is optional
            # uefi-sniff is optional
            # must-have-esp is optional
            # min-occurrences is optional
        additionalProperties: false
    dir:
        type: object
        properties:
            dir:
                type: string
            tree:
                '$ref': '#/$defs/tree'
            optional:
                const: null
            min-entries:
                type: integer
            max-entries:
                type: integer
            warn-if-not-named:
                type: string
            min-occurrences:
                type: integer
        required:
            - dir
            # tree is optional
            # optional is optional
            # min-entries is optional
            # max-entries is optional
            # warn-if-not-named is optional
            # min-occurrences is optional
        additionalProperties: false
    when-condition:
        type: array
        minItems: 1
        uniqueItems: true
        items:
            type: string
type: object
properties:
    check-sr-results-configuration:
        const: null
    tree:
        '$ref': '#/$defs/tree'
    overlays:
        type: array
        uniqueItems: true
        items:
            type: object
            properties:
                when-all:
                    '$ref': '#/$defs/when-condition'
                when-any:
                    '$ref': '#/$defs/when-condition'
                tree:
                    '$ref': '#/$defs/tree'
            required:
                # when-all is optional
                # when-any is optional
                - tree
            additionalProperties: false
            # We want either when-all or when-any
            minProperties: 2
            maxProperties: 2
required:
    - check-sr-results-configuration
    - tree
    # overlays is optional
additionalProperties: false
