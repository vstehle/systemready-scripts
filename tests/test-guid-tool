#!/bin/bash
set -eu -o pipefail

# Unit test for guid-tool.py.
# Usage: test-guid-tool [keep]
# We keep our temporary folder when `keep' is specified.

# Redirect all output to a log in current folder.
# Keep stdout on fd 3.
bn=$(basename "$0")
log="$bn.log"
exec 3>&1 >"$log" 2>&1
set -x

echo -n 'Testing guid tool... ' >&3
trap 'echo "ERROR! (see $log)" >&3' ERR

# Make sure guid-tool.py is in the path.
me=$(realpath "$0")
here="${me%/*}"
export PATH="$here/..:$PATH"

# Temporary folder.
if [ "${1:-unset}" == keep ]; then
	tmp=$(mktemp -d "$(basename "$0").XXX")
else
	tmp=$(mktemp -d)
	trap 'rm -fr "$tmp"' EXIT
fi

out="$tmp/out"
guid-tool.py 12345678-1234-4234-9234-56789abcdef0 |& tee "$out"
grep Unknown "$out"
echo -n 'unknown guid not recognized, ' >&3

guid-tool.py ae13ff2d-9ad4-4e25-9ac8-6d80b3b22147 |& tee "$out"
grep 'EFI_FIRMWARE_IMAGE_TYPE_UBOOT_FIT_GUID' "$out"
echo -n 'known guid recognized, ' >&3

echo -n 'stable debug, ' >&3
a="$tmp/a.log"
b="$tmp/b.log"
guid-tool.py ae13ff2d-9ad4-4e25-9ac8-6d80b3b22147 --debug |& tee "$a"
guid-tool.py ae13ff2d-9ad4-4e25-9ac8-6d80b3b22147 --debug |& tee "$b"
diff -u "$a" "$b"

if guid-tool.py ABC |& tee "$out"; then
	false
fi

grep Invalid "$out"
echo -n 'invalid guid rejected, ' >&3

guid-tool.py --details "$(uuidgen -t)" |& tee "$out"
grep 'version: 1 (time-based)' "$out"
grep 'datetime:' "$out"
grep 'multicast/global:' "$out"
echo -n 'time-based details, ' >&3

guid-tool.py --details "$(uuidgen -r)" |& tee "$out"
grep 'version: 4 (randomly generated)' "$out"
echo -n 'random details, ' >&3

echo 'ok.' >&3
