#!/bin/bash
set -eu -o pipefail

# Unit test for capsule-tool.py.
# Usage: test-capsule-tool [keep]
# We keep our temporary folder when `keep' is specified.

# Verify that two files differ.
# $1, $2: files
assert_files_differ()
{
	if cmp -b "$1" "$2"; then
		false
	fi

	echo -n 'different, ' >&3
}

# Redirect all output to a log in current folder.
# Keep stdout on fd 3.
bn=$(basename "$0")
log="$bn.log"
exec 3>&1 >"$log" 2>&1
set -x

echo -n 'Testing capsule tool... ' >&3
trap 'echo "ERROR! (see $log)" >&3' ERR

# Make sure capsule-tool.py is in the path.
me=$(realpath "$0")
here="${me%/*}"
export PATH="$here/..:$PATH"

# Temporary folder.
if [ "${1:-unset}" == keep ]; then
	tmp=$(mktemp -d "$(basename "$0").XXX")
else
	tmp=$(mktemp -d)
	trap 'rm -fr "$tmp"' EXIT
fi

echo -n 'image, ' >&3
img="$tmp/image.bin"
dd if=/dev/urandom of="$img" bs=123 count=1

echo -n 'random, ' >&3
out="$tmp/log"

if capsule-tool.py "$img" |& tee "$out"; then
	false
fi

grep -q 'Could not parse capsule' "$out"

echo -n 'zero, ' >&3

if capsule-tool.py /dev/zero |& tee "$out"; then
	false
fi

grep -q 'Could not parse capsule' "$out"

echo -n 'unauthenticated capsule, ' >&3
unauth="$tmp/unauthenticated.bin"

mkeficapsule \
	--index 1 --guid 058B7D83-50D5-4C47-A195-60D86AD341C4 \
	"$img" "$unauth"

if capsule-tool.py "$unauth" |& tee "$out"; then
	false
fi

grep -q 'Missing authentication flag' "$out"
grep -q 'Invalid capsule' "$out"
echo -n 'does not validate, ' >&3

capsule-tool.py --force "$unauth" |& tee "$out"
grep -q 'continue anyway' "$out"
echo -n 'does with force, ' >&3

echo -n 'copy, ' >&3
copy="$tmp/copy.bin"
capsule-tool.py --force --output "$copy" "$unauth"

cmp -b "$unauth" "$copy"
echo -n 'identical, ' >&3

echo -n 'extract, ' >&3
ext="$tmp/extract.bin"
capsule-tool.py --force --extract "$ext" "$unauth"

cmp -b "$img" "$ext"
echo -n 'identical, ' >&3

echo -n 'certificate, ' >&3

openssl req -x509 -sha256 -newkey rsa:2048 -subj /CN=CRT/ \
	-keyout "$tmp/CRT.key" -out "$tmp/CRT.crt" -nodes -days 365

echo -n 'authenticated capsule, ' >&3
auth="$tmp/authenticated.bin"

mkeficapsule \
	--monotonic-count 1 \
	--private-key "$tmp/CRT.key" \
	--certificate "$tmp/CRT.crt" \
	--index 1 \
	--guid 058B7D83-50D5-4C47-A195-60D86AD341C4 \
	"$img" "$auth"

hexdump "$auth" >"$auth.hex"

echo -n 'validate, ' >&3
capsule-tool.py "$auth" |& tee "$out"
grep -q 'Valid authenticated capsule in FMP format' "$out"
grep -q 'QEMU_ARM64_UBOOT_IMAGE_GUID' "$out"
grep -qv 'Image type id GUID: ' "$out"

capsule-tool.py --expected-guid 058B7D83-50D5-4C47-A195-60D86AD341C4 \
	"$auth" |& tee "$out"

grep -q 'expected one' "$out"
echo -n 'guid expected, ' >&3

if capsule-tool.py --expected-guid 12345678-1234-1234-1234-123456789abc \
	"$auth" |& tee "$out"; then
	false
fi

grep -q 'Bad capsule GUID' "$out"
echo -n 'unexpected guid caught, ' >&3

echo -n 'tamper, ' >&3
tamp="$tmp/tampered.bin"
capsule-tool.py --tamper --output "$tamp" "$auth"
hexdump "$tamp" >"$tamp.hex"
assert_files_differ "$auth" "$tamp"

dif="$tmp/diff"

if diff -u "$auth.hex" "$tamp.hex" |& tee "$dif"; then
	false
fi

add=$(grep -c '^+0' "$dif")
sub=$(grep -c '^-0' "$dif")

(( (add == 1) && (sub == 1) ))
echo -n 'one line changed, ' >&3

echo -n 'de-authenticate, ' >&3
deauth="$tmp/deauthenticated.bin"
capsule-tool.py --de-authenticate --output "$deauth" "$auth"
assert_files_differ "$auth" "$deauth"

cmp -b "$unauth" "$deauth"
echo -n 'same as unauthenticated, ' >&3

echo -n 'unknown guid, ' >&3
unk="$tmp/unknown.bin"

mkeficapsule \
	--monotonic-count 1 \
	--private-key "$tmp/CRT.key" \
	--certificate "$tmp/CRT.crt" \
	--index 1 \
	--guid 12345678-9abc-def0-1234-56789abcdef0 \
	"$img" "$unk"

capsule-tool.py "$unk" |& tee "$out"
grep -q 'Valid authenticated capsule in FMP format' "$out"
grep -q 'Capsule update image type id .* is unknown' "$out"


echo -n 'print guid, ' >&3
capsule-tool.py --print-guid "$auth" |& tee "$out"
grep -q 'Image type id GUID: 058b7d83-50d5-4c47-a195-60d86ad341c4' "$out"

echo 'ok.' >&3
